version: "3.9"
services:
  registry:
    image: quay.io/quarkus/registry-app
    environment:
      - TOKEN=test
      - QUARKUS_DATASOURCE_USERNAME=postgresql
      - QUARKUS_DATASOURCE_PASSWORD=postgresql
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://database:5432/registrydb
      - QUARKUS_REGISTRY_ID=registry.giraffi.ch
      - QUARKUS_REGISTRY_GROUPID=ch.giraffi.registry
      - QUARKUS_REGISTRY_MAVEN_REPO_URL=http://registry.giraffi.ch/maven
    ports:
      - "8085:8080"
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgresql
      - POSTGRES_PASSWORD=postgresql
      - POSTGRES_DB=registrydb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d registrydb -U postgresql"]
      interval: 3s
      timeout: 5s
      retries: 5

  code-quarkus-api:
    image: quay.io/quarkus/code-quarkus-api
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_REGISTRIES=registry.giraffi.ch,registry.quarkus.io
      - QUARKUS_REGISTRY_REGISTRY_GIRAFFI_CH_REPO_URL=http://registry:8080/maven
      - QUARKUS_REGISTRY_REGISTRY_QUARKUS_IO_REPO_URL=https://registry.quarkus.io/maven
      - BOOTSTRAP_MAVEN_REPOS=nexus-giraffi
      - BOOTSTRAP_MAVEN_REPO_NEXUS_GIRAFFI_URL=http://fake-registry:80/repository/maven-releases
    #command: bash -c 'while [[ "$$(curl --connect-timeout 2 -s -o /dev/null -w ''%{http_code}'' http://registry:8080/client/platforms)" != "200" ]]; do echo ..; sleep 5; done; echo backend is up;'
    depends_on:
      - registry

  code-quarkus-frontend:
    image: quay.io/redhat-developer/code-quarkus
    ports:
      - "3000:8082"
    depends_on:
      - code-quarkus-api

  fake-registry:
    image: nginx:latest
    volumes:
      - "../docker/nginx/config:/etc/nginx/conf.d"
      - "../docker/nginx/files:/files"
    ports:
      - "8083:80"
